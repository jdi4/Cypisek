@model Cypisek.ViewModels.Schedules.ClientScheduleFormViewModel

@{
    ViewBag.Title = "Dodaj harmonogram";
}

<div class="label-danger">
    @ViewBag.error
</div>

<h2>Dodaj harmonogram</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>


    </div>

        <table class="table">
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.MediaFileList.First().FileName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MediaFileList.First().FileSize)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.MediaFileList.First().PlayTime)
                </th>
            </tr>
            @for (int i = 0 ; i < Model.MediaFileList.Count; i++)
            {
                <tr>
                    <td>
                        @Html.CheckBoxFor(x => x.MediaFileList[i].IsSelected)
                        @Html.HiddenFor(x => x.MediaFileList[i].ID)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.MediaFileList[i].FileName)
                        @Html.HiddenFor(x => x.MediaFileList[i].FileName)
                    </td>
                    <td>
                        @Html.DisplayFor(x => x.MediaFileList[i].FileSize)
                        @Html.HiddenFor(x => x.MediaFileList[i].FileSize)
                    </td>
                    <td>
                        @*@Html.TextBoxFor(x => x.MediaFileList[i].PlayTime)*@
                        @Html.EditorFor(x => x.MediaFileList[i].PlayTime)
                        @Html.ValidationMessageFor(x => x.MediaFileList[i].PlayTime, "", new { @class = "text-danger" })
                    </td>
                </tr>
            }
        </table>

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default" />
            </div>
        </div>

}
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>


